[{"/usr/src/app/src/container/Product.jsx":"1"},{"size":3404,"mtime":1606825292899,"results":"2","hashOfConfig":"3"},{"filePath":"4","messages":"5","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"6"},"xk60pg","/usr/src/app/src/container/Product.jsx",["7","8"],"import React from 'react';\nimport initialState from '../initialState';\n\nconst Product = () => {\n\n    const [products, setProducts] = React.useState([])\n\n    React.useEffect(()=>{\n        setProducts(initialState.products)\n    })\n\n    const deleteProduct = async id => {\n\n        try {\n    \n          const productsFilter = products.filter(item => item.id != id)\n          console.log(productsFilter)\n          setProducts(productsFilter)\n    \n    \n        } catch (error) {\n          console.log(error)\n        }\n      }\n    \n      const editProduct = (item) => {\n        // setModoEdicion(true)\n        // setProduct(item.name)\n        // setProductId(item.id)\n      }\n\n    return (\n        <div>\n            <h3 className=\"mt-4\">Mantedor de Productos</h3>\n            <hr/>\n            <div className=\"row mt-\">\n                <div className=\"col-md-4\">\n                    <form>\n                        <div className=\"form-group\">\n                            <label for=\"nombre\">Nombre</label>\n                            <input type=\"text\" className=\"form-control form-control-sm\" id=\"nombre\" placeholder=\"name@example.com\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <label for=\"codigo\">Código</label>\n                            <input type=\"text\" className=\"form-control form-control-sm\" id=\"codigo\" placeholder=\"name@example.com\" />\n                        </div>\n                        <div className=\"form-group\">\n                            <label for=\"descripcion\">Descripción</label>\n                            <textarea className=\"form-control\" id=\"descripcion\" rows=\"2\"></textarea>\n                        </div>\n                        <button type=\"submit\" className=\"btn btn-primary btn-block\">Aceptar</button>\n                    </form>\n                </div>\n                <div className=\"col-md-8 mt-4\">\n                    <table className=\"table table-sm\">\n                        <thead>\n                            <tr>\n                                <th scope=\"col\">Código</th>\n                                <th scope=\"col\">Nombre</th>\n                                <th scope=\"col\">Precio</th>\n                                <th scope=\"col\" className=\"text-center\">opciones</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                products.map(item => (\n                                    <tr key={item.id}>\n                                        <td>{item.code}</td>\n                                        <td>{item.name}</td>\n                                        <td>{item.price}</td>\n                                        <td className=\"text-center\">\n                                            <button  className=\"btn btn-sm btn-danger float-right mx-2\" onClick = {() => deleteProduct(item.id)}> Eliminar</button>\n                                            <button className=\"btn btn-sm btn-warning float-right\" onClick = {() => editProduct(item)}>Editar</button>\n                                        </td>\n                                    </tr>\n                                ))\n                            }\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Product\n",{"ruleId":"9","severity":1,"message":"10","line":8,"column":5,"nodeType":"11","endLine":8,"endColumn":20,"suggestions":"12"},{"ruleId":"13","severity":1,"message":"14","line":16,"column":66,"nodeType":"15","messageId":"16","endLine":16,"endColumn":68},"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setProducts'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.","MemberExpression",["17"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",{"desc":"18","fix":"19"},"Add dependencies array: []",{"range":"20","text":"21"},[227,227],", []"]